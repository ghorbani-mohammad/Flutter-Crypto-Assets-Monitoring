name: Release using conventional commits on master

# ────────────────────────────────────────────────────
# 1) Give the built-in GITHUB_TOKEN write access to repo contents
# ────────────────────────────────────────────────────
permissions:
  contents: write

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # ────────────────────────────────────────────────────
      # 2) Checkout full history (so tags & commits can be read/pushed)
      # ────────────────────────────────────────────────────
      - name: Checkout full repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: true

      # ────────────────────────────────────────────────────
      # 3) Configure git user (so commits & tags carry an identity)
      # ────────────────────────────────────────────────────
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # ────────────────────────────────────────────────────
      # 4) Run the changelog action (it will now be able to push)
      # ────────────────────────────────────────────────────
      - name: Generate CHANGELOG & bump tag
        id: changelog
        uses: TriPSs/conventional-changelog-action@latest
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          commit: true
          push: true

      # ────────────────────────────────────────────────────
      # 5) Bump pubspec.yaml to match the new semver tag + build #
      # ────────────────────────────────────────────────────
      - name: Bump pubspec version
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          TAG=${{ steps.changelog.outputs.tag }}      # e.g. "v1.2.3"
          VER=${TAG#v}                                # strips "v"
          sed -i "s/^version:.*/version: ${VER}+${GITHUB_RUN_NUMBER}/" pubspec.yaml
          git add pubspec.yaml
          git commit -m "chore: bump pubspec to ${VER}+${GITHUB_RUN_NUMBER}"
          git push

      # ────────────────────────────────────────────────────
      # 6) Build & release your Flutter APK
      # ────────────────────────────────────────────────────
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android release
        run: flutter build apk --release

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: steps.changelog.outputs.skipped == 'false'
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          name:    ${{ steps.changelog.outputs.tag }}
          body:    ${{ steps.changelog.outputs.clean_changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK asset
        uses: softprops/action-gh-release@v1
        if: steps.changelog.outputs.skipped == 'false'
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          files:    build/app/outputs/flutter-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
